<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
    <metadata>
        <id>CS-Script.RoslynProvider</id>
<version>3.28.0.1</version>
        <title>CS-Script CodeDom Roslyn provider (CSSRoslynProvider.dll)</title>
        <authors>Oleg Shilo</authors>
        <owners>Oleg Shilo</owners>
        <licenseUrl>https://github.com/oleg-shilo/cs-script/blob/master/LICENSE</licenseUrl>
        <projectUrl>https://github.com/oleg-shilo/cs-script/</projectUrl>
        <iconUrl>https://raw.githubusercontent.com/oleg-shilo/cs-script/master/Source/Logo/css_logo.ico</iconUrl>
        <requireLicenseAcceptance>true</requireLicenseAcceptance>
        <description>The CodeDom provider for CS-Script Class Library that targets Roslyn.</description>
        <summary>This is the complete package for hosting the script engine in .NET (full) applications. Apart from having all binaries required for the all three available compilation engines (Roslyn, Mono and CodeDom) it also contains the integration module (CSSRoslynProvider.dll) that allows CodeDom compilation engine and the CS-Script legacy native interface to process C# 7.0 syntax.</summary>
        <releaseNotes>
# Release v3.28.0.0

- CSScriptLib .NET Core v1.0.0.0 (NuGet package)
- Implemented debugging in RoslynEvaluator
- Implemented MarshalByRefObjectWithInfiniteLifetime to allow long living remote script objects
- Added MarshalByRefObjectWithInfiniteLifetime class for managing remote scripts lifetime
- Improved RoslynEvaluator error reporting
- Added exception handling on AsmHelper disposing.

</releaseNotes>
        <copyright>Copyright (C) 2004-2017 Oleg Shilo</copyright>
        <language>en-AU</language>
        <tags>C# Scripting Dynamic CS-Script csscript</tags>
        <dependencies>
            <dependency id="CS-Script.bin" version="3.27.0.0" />
            <dependency id="Microsoft.Net.Compilers" version="2.2.0" />
        </dependencies>
    </metadata>
    <files>
        <file src="lib\net46\CSSRoslynProvider.dll" target="lib\net46\CSSRoslynProvider.dll" />
        <file src="content\net46\Scripting.native.Roslyn.cs" target="content\net46\Scripting.native.Roslyn.cs" />
    </files>
</package>
