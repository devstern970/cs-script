<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IEvaluator Interface</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IEvaluator interface" /><meta name="System.Keywords" content="CSScriptLib.IEvaluator interface" /><meta name="Microsoft.Help.F1" content="CSScriptLib.IEvaluator" /><meta name="Microsoft.Help.Id" content="T:CSScriptLib.IEvaluator" /><meta name="Description" content="A generic interface of the CS-Script evaluator. It encapsulates the generic functionality of the evaluator regardless of the nature of the underlying compiling services (e.g. Mono, Roslyn, CodeDom)." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="CSScriptLib" /><meta name="file" content="3853215a-1dba-de06-cfdc-13a6edb2e37f" /><meta name="guid" content="3853215a-1dba-de06-cfdc-13a6edb2e37f" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">A Sandcastle Documented Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/dd1d21fd-0687-3709-ad9e-fb2c04b07fdd.htm" title="A Sandcastle Documented Class Library" tocid="roottoc">A Sandcastle Documented Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/3bca438b-6a3b-acb6-218a-f07ec3aa462e.htm" title="CSScriptLib" tocid="3bca438b-6a3b-acb6-218a-f07ec3aa462e">CSScriptLib</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/3853215a-1dba-de06-cfdc-13a6edb2e37f.htm" title="IEvaluator Interface" tocid="3853215a-1dba-de06-cfdc-13a6edb2e37f">IEvaluator Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1a8bb1a0-2325-9361-98e4-520e5020fe71.htm" title="IEvaluator Properties" tocid="1a8bb1a0-2325-9361-98e4-520e5020fe71">IEvaluator Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/7686eb04-f896-6c92-a375-eec64782cfbc.htm" title="IEvaluator Methods" tocid="7686eb04-f896-6c92-a375-eec64782cfbc">IEvaluator Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>IEvaluator Interface</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            A generic interface of the CS-Script evaluator. It encapsulates the generic functionality of
            the evaluator regardless of the nature of the underlying compiling services (e.g. Mono,
            Roslyn, CodeDom).
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="3bca438b-6a3b-acb6-218a-f07ec3aa462e.htm">CSScriptLib</a><br />
    <strong>Assembly:</strong>
   CSScriptLib (in CSScriptLib.dll) Version: 4.4.3.0+1f64469bb8b0a84516ba6e496cb222999aa64e94<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IEvaluator</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script></div><p>The <span class="selflink">IEvaluator</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="ceb4eab2-3fb7-b506-eb71-c942971c8641.htm">DebugBuild</a></td><td><div class="summary">
            Gets or sets a value indicating whether to compile script with debug symbols.
            <p>
            Note, setting <span class="code">DebugBuild</span> will only affect the current instance of Evaluator. If
            you want to emit debug symbols for all instances of Evaluator then use <a href="33e2b04a-87b0-98e5-bfc2-f85c47029951.htm">EvaluatorConfig</a>.DebugBuild.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="62ee5b67-b522-438d-0a01-da897fc2ba5b.htm">DisableReferencingFromCode</a></td><td><div class="summary">
            Gets or sets the flag indicating if the script code should be analyzed and the
            assemblies that the script depend on (via '//css_...' and 'using ...' directives) should
            be referenced.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="71fa8b27-9c13-a934-cfa6-3c2c6c6e0874.htm">IsAssemblyUnloadingEnabled</a></td><td><div class="summary">
            CS-Script assembly unloading functionality is implemented as a combination of loading
            assembly into <a href="https://docs.microsoft.com/dotnet/api/system.runtime.loader.assemblyloadcontext" target="_blank" rel="noopener noreferrer">AssemblyLoadContext</a> that is marked as
            "IsCollectible" and the <span class="code">ReflectionExtensions</span>. <a href="506de4d8-4b28-08e6-4fa9-75ca5c7a588a.htm">Unload(Assembly)</a> extension method.
            Unloading is only available on the runtimes that support it. Otherwise <a href="https://docs.microsoft.com/dotnet/api/system.runtime.loader.assemblyloadcontext" target="_blank" rel="noopener noreferrer">AssemblyLoadContext</a> throws an exception on attempt to
            load the compiled script assembly.
            <p><a href="71fa8b27-9c13-a934-cfa6-3c2c6c6e0874.htm">IsAssemblyUnloadingEnabled</a> is designed to allow enabling/disabling of the
            assembly unloading should you find that the limitations associated with this .NET Core
            specific feature are not acceptable. E.g., collectible assemblies cannot be referenced
            from other scripts or in fact any dynamically loaded assembly for that matter.
            </p><p>
            Note, using 'dynamic` completely breaks CLR unloading mechanism. Most likely it triggers
            an accidental referencing of the assembly or <a href="https://docs.microsoft.com/dotnet/api/system.runtime.loader.assemblyloadcontext" target="_blank" rel="noopener noreferrer">AssemblyLoadContext</a>. Meaning that if you are planing to
            use assembly unloading you need to use interface based scripting. See `Test_Unloading`
            (https://github.com/oleg-shilo/cs-script/blob/master/src/CSScriptLib/src/Client.NET-Core/Program.cs)
            sample for details.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="4ce16dfb-76a5-060a-253b-e4b42f2bebd2.htm">IsCachingEnabled</a></td><td><div class="summary">
             This property controls script caching.
             <p>Caching mechanism allows avoiding multiple compilation of the scripts that have been already compiled and has not changes
             since then for the duration of the host process. This feature can dramatically improve the performance in the cases when you are executing
             the same script again and again. Even though in such cases caching is not the greatest optimization that can be achieved.</p><p>Note that caching has some limitations. Thus the algorithm for checking if the script is changed since the last execution
             is limited to verifying the script code (text) only. Thus it needs to be used with caution. </p><p>Script caching is disabled by default.</p></div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="8633c34f-f1e2-e370-5d13-d2725126503e.htm">Check</a></td><td><div class="summary">
             Compiles the specified script text without loading it into the AppDomain or
             writing to the file system.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="f3a34d8f-79b9-4863-5089-b74fb32b266b.htm">Clone</a></td><td><div class="summary">
             Clones the parent <span class="selflink">IEvaluator</span>.
             <p>
             This method returns a freshly initialized copy of the <span class="selflink">IEvaluator</span>.
             The cloning 'depth' can be controlled by the <span class="parameter">copyRefAssemblies</span>.
             </p><p>
             This method is a convenient technique when multiple <span class="selflink">IEvaluator</span> instances
             are required (e.g. for concurrent script evaluation).
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="9444c04e-cf37-e231-e78d-547795d56d5f.htm">CompileAssemblyFromCode</a></td><td><div class="summary">
             Compiles C# code (script) into assembly file. The C# code is a typical C# code containing a single or multiple class definition(s).
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="2c385d49-7614-07ea-1214-0b8034380290.htm">CompileAssemblyFromFile</a></td><td><div class="summary">
             Compiles C# file (script) into assembly file. The C# contains typical C# code containing a single or multiple class definition(s).
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="13d95584-7d3c-62fe-b3d7-1cbe59658f8f.htm">CompileCode</a></td><td><div class="summary">
             Evaluates (compiles) C# code (script). The C# code is a typical C# code containing a single or multiple class definition(s).
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="e1cb974a-6909-64d1-397e-41e1b6119ab1.htm">CompileMethod</a></td><td><div class="summary">
             Wraps C# code fragment into auto-generated class (type name <span class="code">DynamicClass</span>) and evaluates it.
             <p>
             This method is a logical equivalent of <a href="13d95584-7d3c-62fe-b3d7-1cbe59658f8f.htm">CompileCode(String, CompileInfo)</a> but is allows you to define
             your script class by specifying class method instead of whole class declaration.</p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="e8feecdf-589c-0cb4-0776-e3653335f139.htm">CreateDelegate(String)</a></td><td><div class="summary">
             Wraps C# code fragment into auto-generated class (type name <span class="code">DynamicClass</span>),
             evaluates it and loads the class to the current AppDomain.
             <p>
             Returns non-typed <a href="d102f883-37bb-3977-9012-0f21657bdf28.htm">MethodDelegate</a> for class-less style of invoking.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="8635a3b6-4dda-78b6-3c00-b680f5bd52bf.htm">CreateDelegate<span id="LST99EE3A40_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST99EE3A40_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(String)</a></td><td><div class="summary">
             Wraps C# code fragment into auto-generated class (type name <span class="code">DynamicClass</span>),
             evaluates it and loads the class to the current AppDomain.
             <p>
             Returns typed <a href="4e831977-d07c-c462-2ce8-4f5edac5c93c.htm">MethodDelegate<span id="LST99EE3A40_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST99EE3A40_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> for class-less style of invoking.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ad5d369f-a449-90d9-6159-a9d431c80dfb.htm">GetReferencedAssemblies<span id="LST99EE3A40_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Returns set of referenced assemblies.
            <p>Notre: the set of assemblies is cleared on Reset.</p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8eed2f6c-0e19-3dc2-8b02-202e02c303c7.htm">GetReferencedAssemblies(String, <span id="LST99EE3A40_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_5?cpp=array&lt;");</script>String<span id="LST99EE3A40_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_6?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Analyses the script code and returns set of locations for the assemblies referenced from
            the code with CS-Script directives (//css_ref).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="ea230527-cb73-5f65-3758-3cefe73be216.htm">LoadCode(String, <span id="LST99EE3A40_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_7?cpp=array&lt;");</script>Object<span id="LST99EE3A40_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_8?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
             Evaluates and loads C# code to the current AppDomain. Returns instance of the first class defined in the code.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="10aa6cee-85d8-20ee-3805-04eb499e18c2.htm">LoadCode<span id="LST99EE3A40_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST99EE3A40_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(String, <span id="LST99EE3A40_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_11?cpp=array&lt;");</script>Object<span id="LST99EE3A40_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_12?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
             Evaluates and loads C# code to the current AppDomain. Returns instance of the first class defined in the code.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="24a8edf3-c189-eafc-310b-19f1f58a7fec.htm">LoadDelegate<span id="LST99EE3A40_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST99EE3A40_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_14?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td> <strong>Obsolete. </strong><div class="summary">
             Wraps C# code fragment into auto-generated class (type name <span class="code">DynamicClass</span>),
             evaluates it and loads the class to the current AppDomain.
             <p>
             Returns instance of <span class="code">T</span> delegate for the first method in the auto-generated class.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="8bdb6840-f8b9-a23c-a912-072e2d7bfe9f.htm">LoadFile(String, <span id="LST99EE3A40_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_15?cpp=array&lt;");</script>Object<span id="LST99EE3A40_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_16?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
             Evaluates and loads C# code from the specified file to the current AppDomain. Returns instance of the first
             class defined in the script file.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="0bab5c7c-d6d7-0b88-744b-10af4c0270dc.htm">LoadFile<span id="LST99EE3A40_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_17?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST99EE3A40_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_18?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(String, <span id="LST99EE3A40_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_19?cpp=array&lt;");</script>Object<span id="LST99EE3A40_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_20?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
             Evaluates and loads C# code from the specified file to the current AppDomain. Returns instance of the first
             class defined in the script file.
             After initializing the class instance it is aligned to the interface specified by the parameter <span class="code">T</span>.
             <p><span class="code">Note:</span> the script class does not have to inherit from the <span class="code">T</span> parameter as the proxy type
             will be generated anyway.</p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="e35b2c14-feb8-2a05-b4ac-5421fd0d57f0.htm">LoadMethod(String)</a></td><td><div class="summary">
             Wraps C# code fragment into auto-generated class (type name <span class="code">DynamicClass</span>),
             evaluates it and loads the class to the current AppDomain.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="f4567bee-c0ab-2e65-9e85-bcf87289a445.htm">LoadMethod<span id="LST99EE3A40_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_21?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST99EE3A40_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_22?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(String)</a></td><td><div class="summary">
             Wraps C# code fragment into auto-generated class (type name <span class="code">DynamicClass</span>),
             evaluates it and loads the class to the current AppDomain.
             <p>
             After initializing the class instance it is aligned to the interface specified by the
             parameter <span class="code">T</span>.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="119d5cb0-66b7-5527-367a-62c64ac98e2c.htm">ReferenceAssembliesFromCode</a></td><td><div class="summary">
            References the assemblies from the script code.
            <p>
            The method analyses and tries to resolve CS-Script directives (e.g. '//css_ref') and
            'used' namespaces based on the optional search directories.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="1fc041db-891d-ea4d-44e2-1a08c768b365.htm">ReferenceAssembly(Assembly)</a></td><td><div class="summary">
            References the given assembly.
            <p>
            It is safe to call this method multiple times for the same assembly. If the assembly
            already referenced it will not be referenced again.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="99418b18-b71b-9033-7c08-6ff39aac88d2.htm">ReferenceAssembly(String)</a></td><td><div class="summary">
            References the given assembly by the assembly path.
            <p>
            It is safe to call this method multiple times for the same assembly. If the assembly
            already referenced it will not be referenced again.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="833d983c-cd79-8294-d952-7386aebcec50.htm">ReferenceAssemblyByName</a></td><td><div class="summary">
            References the name of the assembly by its partial name.
            <p>
            Note that the referenced assembly will be loaded into the host AppDomain in order to
            resolve assembly partial name.
            </p><p>It is an equivalent of <span class="code">Evaluator.ReferenceAssembly(Assembly.LoadWithPartialName(assemblyPartialName))</span></p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="00a902da-a4b5-9520-794a-271520c93b86.htm">ReferenceAssemblyByNamespace</a></td><td><div class="summary">
            References the assembly by the given namespace it implements.
            <p>
            Adds assembly reference if the namespace was successfully resolved (found) and,
            otherwise does nothing
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c9938dbd-8050-ae76-586d-4b3c2b5051d4.htm">ReferenceAssemblyOf(Object)</a></td><td><div class="summary">
            References the assembly by the object, which belongs to this assembly.
            <p>
            It is safe to call this method multiple times for the same assembly. If the assembly
            already referenced it will not be referenced again.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8d901c29-e4ed-e9c9-0ce6-45a26cb5de74.htm">ReferenceAssemblyOf<span id="LST99EE3A40_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_23?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST99EE3A40_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_24?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST99EE3A40_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_25?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            References the assembly by the object, which belongs to this assembly.
            <p>
            It is safe to call this method multiple times for the same assembly. If the assembly
            already referenced it will not be referenced again.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="5e2dbdc6-548f-068d-e74a-9924b58479d2.htm">ReferenceDomainAssemblies</a></td><td><div class="summary">
            References the assemblies the are already loaded into the current <span class="code">AppDomain</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="448f9e5b-2ab7-7889-2023-b49017452017.htm">Reset</a></td><td><div class="summary">
            Resets Evaluator.
            <p>
            Resetting means clearing all referenced assemblies, recreating evaluation infrastructure
            (e.g. compiler setting) and reconnection to or recreation of the underlying compiling services.
            </p><p>
            Optionally the default current AppDomain assemblies can be referenced automatically with
            <span class="parameter">referenceDomainAssemblies</span>.
            </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a64eb9f2-62c4-04b8-1a93-bd79c59eb4da.htm">SetRefAssemblyFilter</a></td><td><div class="summary">
             Sets the filter for referenced assemblies. The filter is to be applied just before the
             assemblies are to be referenced during the script execution.
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAFCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAFCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAFCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">dynamic</span> script = CSScript.Evaluator
.SetRefAssemblyFilter(asms =&gt;
asms.Where(a =&gt; !a.FullName.StartsWith(<span class="highlight-literal">"Microsoft."</span>))
.LoadCode(scriptCode);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAFCDA");</script></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3be9ef02-eb46-3210-6986-e2aaa7567039.htm">TryReferenceAssemblyByNamespace</a></td><td><div class="summary">
            References the assembly by the given namespace it implements.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="31f9e092-330f-0289-54d2-c7aef9a1d67e.htm">ExcludeReferencedAssemblies(<span id="LST99EE3A40_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_26?cpp=array&lt;");</script>Assembly<span id="LST99EE3A40_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_27?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td>Overloaded.  <div class="summary">
             Sets referenced assemblies filter for exclusion of some "undesired" assemblies. It is a
             convenient method for fine controlling referencing assemblies but without specifying the
             complete predicates with <a href="a64eb9f2-62c4-04b8-1a93-bd79c59eb4da.htm">SetRefAssemblyFilter(Func<span id="LST99EE3A40_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_28?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>IEnumerable<span id="LST99EE3A40_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_29?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LST99EE3A40_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_30?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LST99EE3A40_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_31?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LST99EE3A40_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_32?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST99EE3A40_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_33?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a>.
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAA1CDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAA1CDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAA1CDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">dynamic</span> script = CSScript.Evaluator
.ExcludeReferencedAssemblies(<span class="highlight-keyword">this</span>.GetType().Assembly)
.LoadCode(scriptCode);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAA1CDA");</script></div> (Defined by <a href="174af9cd-1c54-725e-9367-0ab4875d6654.htm">EvaluatorExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="ad6ed4f9-67d2-064c-dc88-4406e62a59f5.htm">ExcludeReferencedAssemblies(IEnumerable<span id="LST99EE3A40_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_34?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LST99EE3A40_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_35?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td>Overloaded.  <div class="summary">
             Sets referenced assemblies filter for exclusion of some "undesired" assemblies. It is a
             convenient method for fine controlling referencing assemblies but without specifying the
             complete predicates with <a href="a64eb9f2-62c4-04b8-1a93-bd79c59eb4da.htm">SetRefAssemblyFilter(Func<span id="LST99EE3A40_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_36?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>IEnumerable<span id="LST99EE3A40_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_37?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LST99EE3A40_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_38?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LST99EE3A40_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_39?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LST99EE3A40_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_40?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST99EE3A40_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST99EE3A40_41?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a>.
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAZCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAZCDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAZCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">dynamic</span> script = CSScript.Evaluator
.ExcludeReferencedAssemblies(<span class="highlight-keyword">new</span>[]{<span class="highlight-keyword">this</span>.GetType().Assembly})
.LoadCode(scriptCode);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAZCDA");</script></div> (Defined by <a href="174af9cd-1c54-725e-9367-0ab4875d6654.htm">EvaluatorExtensions</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="3bca438b-6a3b-acb6-218a-f07ec3aa462e.htm">CSScriptLib Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>